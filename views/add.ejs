<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Book Finder</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }
        #bookDetails {
            position: absolute;
            top: 20px;
            right: 20px;
            padding: 20px;
            border: 1px solid #ddd;
            max-width: 400px;
            display: none; /* Initially hidden */
            background-color: #f9f9f9;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        #bookDetails img {
            max-width: 100px;
            height: auto;
            margin-left: 20px;
        }
        #bookInfo {
            flex: 1;
        }
        #authorAndImage {
            text-align: right;
        }
        textarea {
            width: 80%;
            height: 250px;
            padding: 10px;
            border: 1px solid #ddd;
            box-sizing: border-box;
            font-size: 16px;
            resize: vertical; /* Allows vertical resizing */
            margin-top: 20px;
        }
    </style>
    
    
</head>
<body>
    <h1>Book Finder</h1>
    <input type="text" id="bookName" placeholder="Enter book name">
    <button onclick="fetchBookDetails()">Find Book</button>
    
    <h2>Book Notes</h2>
    <textarea id="bookNote" placeholder="Enter book notes here..."></textarea>

    <div id="bookDetails">
        <div id="bookInfo"></div>
        <div id="authorAndImage"></div>
    </div>
    <button id="submit">Submit</button>
    <script src="index.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
          document.getElementById("submit").addEventListener("click", function() {
            // Handle form submission or other client-side logic here
            submit(); // Assuming submit() function is defined in your client-side script
          });
        });
      </script>
    
    <script>
        async function fetchBookDetails() {
            var bookName = document.getElementById('bookName').value.trim();
            if (!bookName) {
                alert('Please enter a book name.');
                return;
            }

            const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${encodeURIComponent(bookName)}`);
            const data = await response.json();

            const bookDetailsDiv = document.getElementById('bookDetails');
            if (data.items && data.items.length > 0) {
                // Find the first book with the exact title match
                const book = data.items.find(item => item.volumeInfo.title.toLowerCase() === bookName.toLowerCase());

                if (book) {
                    const title = book.volumeInfo.title || 'Unknown Title';
                    const authors = book.volumeInfo.authors ? book.volumeInfo.authors.join(', ') : 'Unknown Author';
                    const coverImage = book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : '';

                    document.getElementById('bookInfo').innerHTML = `
                        <h2 id="bookTitle">${title}</h2>
                    `;
                    document.getElementById('authorAndImage').innerHTML = `
                        <p id="author"><strong>Author:</strong> ${authors}</p>
                        ${coverImage ? `<img id="coverImage" src="${coverImage}" alt="Cover image of ${title}">` : '<p>No cover image available.</p>'}
                    `;
                    bookDetailsDiv.style.display = 'block'; // Show the book details div
                } else {
                    bookDetailsDiv.style.display = 'none'; // Hide if no exact match is found
                    alert('No book found with the exact title.');
                }
            } else {
                bookDetailsDiv.style.display = 'none'; // Hide if no books are found
                alert('No book found.');
            }
        }
    </script>
    
</body>
</html>
